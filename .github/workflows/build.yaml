name: Build Skia on Update

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily
  workflow_dispatch:
  push:

permissions:
  packages: write
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up environment
        id: string
        uses: ASzc/change-string-case-action@v6
        with:
          string: '${{ runner.os }}-${{ runner.arch }}'
          
      - name: Log Information
        run: echo "Building skia for ${{ steps.string.outputs.lowercase }} at $(date '+%d.%m.%Y')" && echo "DATE=$(date '+%d.%m.%Y')" >> $GITHUB_ENV
        
      - name: Install Ninja & Deps
        run: |
          sudo sed -i 's/jammy/oracular/g' /etc/apt/sources.list
          echo "deb http://archive.ubuntu.com/ubuntu plucky main universe multiverse" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install ninja-build gcc-14 g++-14 binutils llvm-dev lld \
            libglu1-mesa-dev freeglut3-dev mesa-common-dev \
            libfreetype6-dev libegl-dev libegl1 libegl1-mesa-dev \
            libharfbuzz-dev libpng-dev libjpeg-turbo8-dev libwebp-dev \
            libfontconfig-dev libicu-dev libharfbuzz-icu0 libicu76
        
      - name: Clone Skia repo
        run: |
          git clone https://skia.googlesource.com/skia.git
          cd skia && g++-14 --version && ld --version

      - name: Fetch dependencies
        run: python3 tools/git-sync-deps && python3 bin/fetch-ninja && python3 bin/fetch-gn
        working-directory: skia

      - name: Configure Skia (Static)
        run: bin/gn gen out/Static --args='ar = "ar" cc="gcc-14" cxx="g++-14" skia_enable_graphite=true skia_use_vulkan=true extra_cflags = ["-ffunction-sections", "-fdata-sections", "-frtti", "-flto", "-Oz", "-Wl,--gc-sections", "-fvisibility=default"] is_component_build=false is_debug=false is_official_build=true paragraph_gms_enabled=false skia_use_system_harfbuzz=true skia_use_system_freetype2=true skia_use_system_libjpeg_turbo=true skia_use_system_libpng=true skia_use_system_libwebp=true skia_use_system_zlib=true paragraph_tests_enabled=false skia_canvaskit_enable_alias_font=false skia_canvaskit_enable_canvas_bindings=false skia_canvaskit_enable_effects_deserialization=false skia_canvaskit_enable_embedded_font=false skia_canvaskit_enable_font=false skia_canvaskit_enable_paragraph=false skia_canvaskit_enable_pathops=false skia_enable_bentleyottmann=true skia_enable_fontmgr_android=false skia_canvaskit_enable_pathops=false skia_use_dng_sdk=false skia_enable_fontmgr_custom_empty=true skia_enable_skottie=true skia_enable_pdf=false skia_enable_skparagraph=true skia_enable_skshaper=true skia_enable_shaper_tests=false skia_enable_api_available_macro=false skia_compile_modules=true skia_enable_svg=true skia_use_dng_sdk=false skia_use_egl=true skia_use_expat=false skia_use_icu=true skia_use_perfetto=false skia_use_piex=false skia_use_system_expat=false skia_use_system_icu=true skia_use_icu4x=false skia_enable_skunicode=true skia_use_wuffs=false skia_use_x11=false skia_use_xps=false'
        working-directory: skia

      - name: Build Skia (Static)
        run: CC=gcc-14 CXX=g++-14 ninja -C out/Static
        working-directory: skia

      - name: Strip Static
        run: strip -s out/Static/*.a || true
        working-directory: skia

      - name: Create bundle
        run: |
          mkdir -p bundle/include bundle/lib
          cp -r skia/include bundle/include/
          cp -r skia/modules bundle/include/
          cp -r skia/src bundle/include/
          cp skia/out/Static/*.a bundle/lib/ || true

          cat > bundle/meson.build <<'EOF'
          project('skia-prebuilt', 'cpp')

          skia_inc = include_directories('include')
          skia_lib = cc.find_library('skia', dirs: 'lib')

          skia_dep = declare_dependency(
            include_directories: skia_inc,
            dependencies: [skia_lib],
          )
          EOF
          
          zip -r skia-prebuilt-${{ steps.string.outputs.lowercase }}.zip bundle
        working-directory: .

      - name: Check if bundle was created
        run: |
          ls -la skia-prebuilt-${{ steps.string.outputs.lowercase }}.zip
          echo "Bundle size: $(du -h skia-prebuilt-${{ steps.string.outputs.lowercase }}.zip)"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.DATE }}
          name: "Skia Build ${{ env.DATE }}"
          body: |
            Automated Skia build for ${{ steps.string.outputs.lowercase }}
            Built on: ${{ env.DATE }}
            
            This release contains pre-built Skia libraries and headers.
          files: |
            skia-prebuilt-${{ steps.string.outputs.lowercase }}.zip
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
