name: Build Skia on Update

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily
  workflow_dispatch:
  push:

permissions:
  packages: write
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Set up environment
        id: string
        uses: ASzc/change-string-case-action@v6
        with:
          string: '${{ runner.os }}-${{ runner.arch }}'
          
      - name: Log Information
        run: echo "Building skia for ${{ steps.string.outputs.lowercase }} at $(date '+%d.%m.%Y')"
        
      - name: Install Ninja
        run: sudo sed -i 's/jammy/oracular/g' /etc/apt/sources.list && sudo apt-get update && sudo apt-get install ninja-build gcc-14 g++-14 binutils llvm-dev lld libglu1-mesa-dev freeglut3-dev mesa-common-dev libfreetype6-dev libharfbuzz-dev libpng-dev libjpeg-turbo8-dev libwebp-dev libfontconfig-dev
        
      - name: Clone Skia repo
        run: |
          git clone https://skia.googlesource.com/skia.git
          cd skia && g++-14 --version && ld --version

      - name: Packaging includes
        uses: vimtor/action-zip@v1.2
        with:
          files: skia/include
          dest: 'skia-includes.zip'

      - name: Packaging modules
        uses: vimtor/action-zip@v1.2
        with:
          files: skia/modules
          dest: 'skia-modules.zip'

      - name: Packaging src
        uses: vimtor/action-zip@v1.2
        with:
          files: skia/src
          dest: 'skia-src.zip'
      
      - name: Fetch dependencies
        run: python3 tools/git-sync-deps && python3 bin/fetch-ninja && python3 bin/fetch-gn
        working-directory: skia

      - name: Configure Skia
        run: bin/gn gen out/Shared --args='ar = "ar" cc="gcc-14" cxx="g++-14" skia_use_vulkan=true extra_cflags = ["-ffunction-sections", "-fdata-sections", "-fno-rtti", "-flto", "-Oz", "-Wl,--gc-sections"] is_component_build=true is_debug=false is_official_build=true paragraph_gms_enabled=false skia_use_system_harfbuzz=true skia_use_system_freetype2=true skia_use_system_libjpeg_turbo=true skia_use_system_libpng=true skia_use_system_libwebp=true skia_use_system_zlib=true paragraph_tests_enabled=false skia_canvaskit_enable_alias_font=false skia_canvaskit_enable_canvas_bindings=false skia_canvaskit_enable_effects_deserialization=false skia_canvaskit_enable_embedded_font=false skia_canvaskit_enable_font=false skia_canvaskit_enable_paragraph=false skia_canvaskit_enable_pathops=false skia_enable_bentleyottmann=true skia_enable_fontmgr_android=false skia_canvaskit_enable_pathops=false skia_use_dng_sdk=false skia_enable_fontmgr_custom_empty=true skia_enable_skottie=true skia_enable_pdf=false skia_enable_skparagraph=true skia_enable_skshaper=true skia_enable_skshaper_tests=false skia_enable_api_available_macro=false skia_compile_modules=true skia_enable_svg=true skia_use_dng_sdk=false skia_use_egl=true skia_use_expat=false skia_use_icu=false skia_use_perfetto=false skia_use_piex=false skia_use_system_expat=false skia_use_system_icu=false skia_use_wuffs=false skia_use_x11=false skia_use_xps=false'
        working-directory: skia

      - name: Configure Skia (Static)
        run: bin/gn gen out/Static --args='ar = "ar" cc="gcc-14" cxx="g++-14" skia_use_vulkan=true extra_cflags = ["-ffunction-sections", "-fdata-sections", "-fno-rtti", "-flto", "-Oz", "-Wl,--gc-sections"] is_component_build=false is_debug=false is_official_build=true paragraph_gms_enabled=false skia_use_system_harfbuzz=true skia_use_system_freetype2=true skia_use_system_libjpeg_turbo=true skia_use_system_libpng=true skia_use_system_libwebp=true skia_use_system_zlib=true paragraph_tests_enabled=false skia_canvaskit_enable_alias_font=false skia_canvaskit_enable_canvas_bindings=false skia_canvaskit_enable_effects_deserialization=false skia_canvaskit_enable_embedded_font=false skia_canvaskit_enable_font=false skia_canvaskit_enable_paragraph=false skia_canvaskit_enable_pathops=false skia_enable_bentleyottmann=true skia_enable_fontmgr_android=false skia_canvaskit_enable_pathops=false skia_use_dng_sdk=false skia_enable_fontmgr_custom_empty=true skia_enable_skottie=true skia_enable_pdf=false skia_enable_skparagraph=true skia_enable_skshaper=true skia_enable_skshaper_tests=false skia_enable_api_available_macro=false skia_compile_modules=true skia_enable_svg=true skia_use_dng_sdk=false skia_use_egl=true skia_use_expat=false skia_use_icu=false skia_use_perfetto=false skia_use_piex=false skia_use_system_expat=false skia_use_system_icu=false skia_use_wuffs=false skia_use_x11=false skia_use_xps=false'
        working-directory: skia

      - name: Build
        run: CC=gcc-14 CXX=g++-14 ninja -C out/Shared
        working-directory: skia

      - name: Build (Static)
        run: CC=gcc-14 CXX=g++-14 ninja -C out/Static
        working-directory: skia

      - name: Strip builds
        run: strip -s out/Shared/*.so && strip -g out/Shared/*.so && strip --strip-unneeded out/Shared/*.so
        working-directory: skia

      - name: Strip builds (Static)
        run: strip -s out/Static/*.a && strip -g out/Static/*.a && strip --strip-unneeded out/Static/*.a
        working-directory: skia
      
      - name: Configure binaries
        if: success()
        working-directory: skia/out/Shared
        run: rm -drf obj gcc_like_host && echo "DATE=$(date '+%d.%m.%Y')" >> $GITHUB_ENV

      - name: Configure binaries (Static)
        if: success()
        working-directory: skia/out/Static
        run: rm -drf obj gcc_like_host && echo "DATE=$(date '+%d.%m.%Y')" >> $GITHUB_ENV

      - name: Compress binaries
        uses: vimtor/action-zip@v1.2
        with:
          files: skia/out/Shared
          dest: 'skia-${{ steps.string.outputs.lowercase }}.zip'

      - name: Compress binaries (Static)
        uses: vimtor/action-zip@v1.2
        with:
          files: skia/out/Static
          dest: 'skia-${{ steps.string.outputs.lowercase }}-static.zip'

      - name: Release binaries
        uses: softprops/action-gh-release@v2
        with:
          make_latest: 'true'
          tag_name: ${{ env.DATE }}
          files: |
            skia-${{ steps.string.outputs.lowercase }}.zip 
            skia-${{ steps.string.outputs.lowercase }}-static.zip 
            skia-includes.zip
            skia-modules.zip
            skia-src.zip
