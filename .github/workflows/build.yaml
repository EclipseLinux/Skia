name: Build Skia on Update

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily
  workflow_dispatch:
  push:

permissions:
  packages: write
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Set up environment
        id: string
        uses: ASzc/change-string-case-action@v6
        with:
          string: '${{ runner.os }}-${{ runner.arch }}'
          
      - name: Log Information
        run: echo "Building skia for ${{ steps.string.outputs.lowercase }} at $(date '+%d.%m.%Y')"
        
      - name: Install Ninja & Deps
        run: |
          sudo sed -i 's/jammy/oracular/g' /etc/apt/sources.list
          echo "deb http://archive.ubuntu.com/ubuntu plucky main universe multiverse" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install ninja-build gcc-14 g++-14 binutils llvm-dev lld \
            libglu1-mesa-dev freeglut3-dev mesa-common-dev \
            libfreetype6-dev libegl-dev libegl1 libegl1-mesa-dev \
            libharfbuzz-dev libpng-dev libjpeg-turbo8-dev libwebp-dev \
            libfontconfig-dev libicu-dev libharfbuzz-icu0 libicu76
        
      - name: Clone Skia repo
        run: |
          git clone https://skia.googlesource.com/skia.git
          cd skia && g++-14 --version && ld --version

      - name: Fetch dependencies
        run: python3 tools/git-sync-deps && python3 bin/fetch-ninja && python3 bin/fetch-gn
        working-directory: skia

      - name: Configure Skia (Shared)
        run: bin/gn gen out/Shared --args='ar="ar" cc="gcc-14" cxx="g++-14" is_component_build=true is_debug=false is_official_build=true skia_use_vulkan=true skia_enable_graphite=true'
        working-directory: skia

      - name: Configure Skia (Static)
        run: bin/gn gen out/Static --args='ar="ar" cc="gcc-14" cxx="g++-14" is_component_build=false is_debug=false is_official_build=true skia_use_vulkan=true skia_enable_graphite=true'
        working-directory: skia

      - name: Build Skia (Shared)
        run: CC=gcc-14 CXX=g++-14 ninja -C out/Shared
        working-directory: skia

      - name: Build Skia (Static)
        run: CC=gcc-14 CXX=g++-14 ninja -C out/Static
        working-directory: skia

      - name: Strip Shared
        run: strip -s out/Shared/*.so || true
        working-directory: skia

      - name: Strip Static
        run: strip -s out/Static/*.a || true
        working-directory: skia

      - name: Create bundle
        run: |
          mkdir -p bundle/include bundle/lib
          cp -r skia/include bundle/include/
          cp -r skia/modules bundle/include/
          cp -r skia/src bundle/include/
          cp skia/out/Static/*.a bundle/lib/
          cp skia/out/Shared/*.so bundle/lib/ || true

          cat > bundle/meson.build <<'EOF'
          project('skia-prebuilt', 'cpp')

          skia_inc = include_directories('include')
          skia_lib = cc.find_library('skia', dirs: 'lib')

          skia_dep = declare_dependency(
            include_directories: skia_inc,
            dependencies: [skia_lib],
          )
          EOF
          
          zip -r ../skia-prebuilt-${{ steps.string.outputs.lowercase }}.zip bundle
        working-directory: .

      - name: Release bundle
        uses: softprops/action-gh-release@v2
        with:
          make_latest: 'true'
          tag_name: ${{ github.sha }}
          files: |
            skia-prebuilt-${{ steps.string.outputs.lowercase }}.zip
